@{
    Layout = "~/Views/Shared/_UploadLayout.cshtml";
}

@model IEnumerable<Common.Entities.CSV>

<form asp-controller="CSV" asp-action="UploadFile" method="post" enctype="multipart/form-data">
    <input type="file" name="file" />
    <hr />
    <button type="submit">Upload</button>
</form>


@if (Model != null && Model.Any())
{
    @Html.ActionLink("Submit", "Submit", "CSV", null, new { @class = "btn btn-primary" } )
    @Html.ActionLink("OverWrite Submit", "OverWriteSubmit", "CSV", null, new { @class = "btn btn-primary" } )
    @Html.ActionLink("Clear CSV", "ClearUpload", "CSV", null, new { @class = "btn btn-primary" })
    @Html.ActionLink("Export to CSV", "ErrorExportCSV", "CSV", null, new { @class = "btn btn-primary" })
    <h2>Detailed View</h2>

    <p>
        Total Number of Contracts: @ViewBag.Count
    </p>
    <p>
        New Number of Contracts:   @ViewBag.Duplicate
    </p>

    <button id="showAllButton">Show All Objects</button>
    <button id="showFilteredButton">Show New Contracts Only</button>

    <table class="custom-table" id="objectTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ContractID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedOn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ContractName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Owner)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedOn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Department)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Year)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Error)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Duplicate)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td><a href="/CSV/DetailView/@item.ContractID" class="btn btn-primary" target="_blank">@item.ContractID</a></td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedOn)</td>
                    <td>@Html.DisplayFor(modelItem => item.ContractName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Owner)</td>
                    <td>@Html.DisplayFor(modelItem => item.UpdatedOn)</td>
                    <td>@Html.DisplayFor(modelItem => item.Department)</td>
                    <td>@Html.DisplayFor(modelItem => item.Year)</td>
                    <td>
                        @(item.Error ? "true" : "false")
                    </td>
                    <td>
                        @(item.Duplicate ? "true" : "false")
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ContractID">Edit</a> |
                    </td>
                </tr>
            }
        </tbody>
    </table>

}
else
{
    <button id="runButton">Load Visualization</button>
    <div id="mynetwork" style="display: none;"></div>
    <p id="response"></p>
    <div id="progressContainer" class="progress" style="display:none;">
        <div id="progressBar" class="progress-bar" role="progressbar" style="width:100%;">
            100%
        </div>
    </div>
}


<script>
    document.getElementById("runButton").addEventListener("click", function () {
        var scriptElement = document.createElement("script");

        scriptElement.src = "/js/loadVisualization.js";

        document.head.appendChild(scriptElement);
    });
</script>


@if (TempData["AlertMessage"] != null)
{
    <script>
        alert('@TempData["AlertMessage"]');
    </script>
}